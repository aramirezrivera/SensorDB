import psycopg2
import pandas as pd
import matplotlib.pyplot as plt
#libraries for email method 
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from email import encoders
import config

class graphGenerator:

    def __init__(self, destinationEmail):
        #self.sensorPin = sensorPin
        self.destinationEmail = destinationEmail

    def createGraph(self):
        # Connect to the PostgreSQL database
        conn = psycopg2.connect(host=config.host, user=config.user, password=config.password, database='sensordb')
        cursor = conn.cursor()
        query = "SELECT timestamp, temperature, humidity FROM sensordb.sensor_data"
        cursor.execute(query)
        data = cursor.fetchall()

        df = pd.DataFrame(data, columns=['Timestamp', 'Temperature', 'Humidity'])
        df['Timestamp'] = pd.to_datetime(df['Timestamp'])

        # Plotting the data
        plt.plot(df['Timestamp'], df['Temperature'], color='red', label='Temperature')
        plt.plot(df['Timestamp'], df['Humidity'], color='blue', label='Humidity')

        plt.xlabel('Timestamp')
        plt.ylabel('Measurement')
        plt.title('Temperature and Humidity Data')
        plt.ylim(0, 110)
        plt.legend(loc='lower left')

        # Rotate the x-axis label and adjust spacing
        plt.xticks(rotation='vertical')
        plt.subplots_adjust(bottom=0.2)

        # Display or save the graph
        plt.savefig('temperature_humidity_graph.png')
        plt.cla()


    def emailGraph(self):
        subject = 'SensorDB graph'
        msg = MIMEMultipart()
        msg['From'] = config.source_email
        msg['To'] = self.destinationEmail
        msg['Subject'] = subject
        body = 'The below email was automatically generated by the SensorDB software'
        msg.attach(MIMEText(body,'plain'))
        filename='/home/pi/PythonProjects/SensorDB/temperature_humidity_graph.png'
        attachment  =open(filename,'rb')

        part = MIMEBase('application','octet-stream')
        part.set_payload((attachment).read())
        encoders.encode_base64(part)
        part.add_header('Content-Disposition',"attachment; filename= "+filename)
        msg.attach(part)
        text = msg.as_string()
        server = smtplib.SMTP('smtp.mail.yahoo.com',587)
        server.starttls()
        server.login(config.source_email,config.email_password)
        server.sendmail(config.source_email,self.destinationEmail,text)